---
layout: post
title:  "Syntactic rule system of Chinese"
date:   2017-06-26 23:00:00
categories: Computational-Linguistics
tags: Computational Linguistics Chinese
comments: false
---
* content
{:toc}

标准汉语语法中最大的特点是没有严格意义的形态变化。名词没有格的变化，也没有性和数的区别。动词不分人称，也没有时态。
 <!--more-->

标准[汉语](https://en.wikipedia.org/wiki/Chinese_language)语法中最大的特点是没有严格意义的形态变化。名词没有格的变化，也没有性和数的区别。动词不分人称，也没有时态。这一不同于欧洲语言的特点，使得在历史上很长一段时间内，汉语被很多语言学家认为没有语法也没有词类，就连20世纪著名的历史学家威尔·杜兰在《文明的故事》第一卷《东方的遗产》一书中，仍旧认为汉语没有语法和词类。现在的一种观点认为，汉语有语法也有词类，只是它的语法不同于欧洲语言，而且一个词语存在多词性现象。 汉语语法的另外一个特点是省略——不影响整体意思的词往往会被这么做。

上述一段对汉语语法的描述来自百度百科，而其中最为强调的一点就是汉语语法的灵活性，不确定性和歧义性。但是，现在我们尝试着从计算的角度来对汉语的一些具体语言材料进行形式化尝试。

### 基本语法范畴

首先，我们来看一看现代汉语基本语法范畴的具体内容到底什么：
>语言成分的两个性质：
> * 组合性(syntagmatic relation)：两个小单位可以组合成更大单位；
> * 聚合性(paradigmatic relation)：两个单位之间可以相互替换；

对于以上的两个语言成分性质，在讲义中列举了一些简单的例子。从这些例子中可以很容易的看出性质的特征，而且也是很显而易见的：

>关于组合性：
>多--很多--很多学生--很多高个子的学生
>关于聚合性：
>他经常在北大打球。----他常常在北大打球。

对于这种情况，讲义中提出了两个建立基本语法范畴的思路：
>1. 给出语言中基本组合关系的清单（ 结构分类）。
>2. 观察词和短语进入基本组合关系中不同位置的能力，对词和短语进行功能分类。

其中第一种就是我们大家平时在传统的语文学习过程中听到的各种关于句子结构的抽象：主谓结构，述宾结构，述补结构等等。第二种就是对于不同类型的词性划分：名词，动词，形容词等等。这些基本的概念，相信对于大部分的人都不陌生，对于那些学习文科出身的童鞋想必更是熟悉。到目前为止，我们只是把基本的一些语法范畴做了一个简单阐述。这些对于语言材料的整理和研究，我们可以从某种程度上看成是人工手动的编制一些具体的语法规则，甚至可以看成人工手动收集语言规则数据的一个方式。实际上这些研究对于语言现象的本质并不关心，而且有时候会出现各种无法解决的问题。

### X-bar结构理论
在使用传统的方式在对汉语语言材料进行研究的过程中会出现一些无法解决的困难和问题。
>1. 从典型到非典型：元素对集合的隶属度
>2. 从大类到小类：知识颗粒度的粗细

-----

>例1 词类划分与具体词语的词类归属
A. 电脑 风衣 风水 文笔 战争 看法
B. 般配 一样 矮小 安全 耐烦 方便

-----

>例2 X 所 Y 结构应属什么短语类？
他 所 盖 的 房子
他 所 买 的 衣服
他 所 审查 的 论文
他 所 发明 的 机器

-----

X-Bar Theory即X阶标理论，是由乔姆斯基在20世纪70年代提出的一种短语结构理论, 揭示大于词的各种句法单位的内部结构和共有的结构特征。该理论不仅涉及各种短语成分, 也涉及各种分句, 包括句子—这个最大的句法单位。它不仅着眼于反映动词词组(VP)、名词词组(NP)、形容词词组(AP)、介词词组(PP)等内部结构层次, 同时也着眼于这几类词组结构之间横向的相似性。

在乔姆斯基的X-阶标理论中，试图通过一种形式化的方式，将不同的短语乃至句子纳入到相同的结构模式中。每一个短语或者句子都是由一个中心词X出发衍生。而我们要做的工作，就是在X的基础之上，通过x这个head，和head关系紧密的comp，以及与head关系较为松散的ajunct,spec等等，构造出一种统一的结构。


### 上下文无关文法与特征结构合一描述结合

[上下文无关文法](https://en.wikipedia.org/wiki/Context-free_grammar)是乔姆斯基形式文法中的2型文法，该文法在计算机语言的设计中有着极其广泛的作于，编译原理也是基于该文法才能实现。在上面使用X-阶标理论对基于中心词的衍生短语或者短句进行形式化处理之后，接下来，我们就需要对整个句子，乃至语篇从计算的角度进行解析了。

在上下文无关文法的表达中，[BNF](https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_Form)范式可以说是最为常用的一种模型工具。巴科斯范式(BNF: Backus-Naur Form 的缩写)是由 John Backus 和 Peter Naur 首次引入一种形式化符号来描述给定语言的语法（最早用于描述ALGOL 60 编程语言）。现在，几乎每一位新编程语言书籍的作者都使用巴科斯范式来定义编程语言的语法规则。

附录1： 一个汉语规则描述语言的Backus Naur范式
> <规则> ::= && <规则名> <产生式> [:: <约束>]

><规则名> ::= "{" <标识符> "}"

> <产生式> :: <短语类标记> ——> <短语结构>

><短语结构> ::= <结构成分> { <结构成分>}

><结构成分> ::= [<中心成分标识>] <语类标记>
| [<中心成分标识>]<语类标记> "<"<终结符>">"

><中心成分标识> ::= !
><语类标记> ::= <词类标记> | <短语类标记>
><词类标记> ::= n|v|a|t|s|……
><短语类标记> ::= np|vp|ap|tp|……
